name: Generate TWRP Device Tree

on:
  workflow_dispatch:
    inputs:
      LIBRARY_NAME:
        description: 'Library name for the device tree'
        required: true
        default: 'Twrp_Device_Generator'
      IMG_URL:
        description: 'URL to recovery/boot image'
        required: true
        default: 'https://github.com/momo54181/action_build_twrp_device_tree/raw/main/recovery.img'

jobs:
  generate-device-tree:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3 \
          python3-pip \
          cpio \
          wget \
          zip \
          unzip \
          git  # 新增依赖
        
    - name: Install TWRP generator
      run: |
        pip3 install --upgrade twrpdtgen
        
    - name: Download recovery image
      run: |
        wget -O recovery.img "${{ github.event.inputs.IMG_URL }}"
        file recovery.img || true
        
    # 新增：修复属性缺失问题
    - name: Fix missing properties
      run: |
        # 安装Android Image Kitchen
        git clone https://github.com/osm0sis/Android-Image-Kitchen.git AIK
        cd AIK
        ./unpackimg.sh ../recovery.img
        
        # 查找build.prop位置
        PROP_FILE=$(find ramdisk -iname '*build.prop' -o -iname 'prop.default' | head -1)
        
        if [ -f "$PROP_FILE" ]; then
          echo "找到属性文件: $PROP_FILE"
          
          # 添加缺失属性（使用ro.product.system.name的值）
          if ! grep -q 'ro.product.system.device' "$PROP_FILE"; then
            DEVICE_NAME=$(grep 'ro.product.system.name' "$PROP_FILE" | cut -d= -f2)
            [ -z "$DEVICE_NAME" ] && DEVICE_NAME=$(grep 'ro.product.system.model' "$PROP_FILE" | cut -d= -f2)
            [ -z "$DEVICE_NAME" ] && DEVICE_NAME="unknown_device"
            
            echo "添加缺失属性: ro.product.system.device=$DEVICE_NAME"
            echo "ro.product.system.device=$DEVICE_NAME" >> "$PROP_FILE"
          fi
        else
          echo "::warning::未找到属性文件，使用备用方案"
        fi
        
        # 重新打包镜像
        ./repackimg.sh
        mv image-new.img ../recovery_fixed.img
        cd ..
        
    - name: Generate device tree
      run: |
        mkdir -p device_tree_output
        
        # 使用修复后的镜像
        if [ -f recovery_fixed.img ]; then
          echo "使用修复后的镜像"
          python3 -m twrpdtgen -o device_tree_output recovery_fixed.img
        else
          echo "使用原始镜像"
          python3 -m twrpdtgen -o device_tree_output recovery.img
        fi
        
    - name: Compress device tree
      run: |
        cd device_tree_output
        zip -r ../DeviceTree_${{ github.run_number }}.zip .
        cd ..
        
    - name: Create release with device tree
      uses: softprops/action-gh-release@v1
      with:
        files: DeviceTree_${{ github.run_number }}.zip
        name: TWRP_Device_Tree_${{ github.run_number }}
        tag_name: dt-${{ github.run_number }}
        body: |
          Automatically generated TWRP device tree
          Build run: ${{ github.run_number }}
          Source image: ${{ github.event.inputs.IMG_URL }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
