name: Generate TWRP Device Tree

on:
  workflow_dispatch:
    inputs:
      library_name:  # 改为小写
        description: 'Library name for the device tree'
        required: true
        default: 'Twrp_Device_Generator'
      img_url:  # 改为小写
        description: 'URL to recovery/boot image'
        required: true
        default: 'https://github.com/momo54181/action_build_twrp_device_tree/raw/main/recovery.img'
      device_codename:  # 改为小写
        description: 'Device codename (if auto-detection fails)'
        required: false
        默认: ''

jobs:
  generate-device-tree:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3 \
          python3-pip \
          cpio \
          wget \
          zip \
          unzip \
          android-sdk-libsparse-utils
        
    - name: Install TWRP generator
      run: |
        pip3 install --upgrade twrpdtgen
        pip3 install android-prop  # 确保安装属性解析库
        
    - name: Download recovery image
      run: |
        wget -O recovery.img "${{ inputs.img_url }}"
        file recovery.img || true
        
    - name: Convert sparse image if needed
      run: |
        if file recovery.img | grep -q "Android sparse image"; then
          simg2img recovery.img recovery_raw.img
          mv recovery_raw.img recovery.img
          echo "Converted sparse image to raw format"
        fi
        
    - name: Extract device codename
      id: extract_codename
      run: |
        set +e  # 禁用错误退出
        CODENAME=$(python3 -c "\
from android_prop import Prop; \
try: \
    p = Prop.from_file('recovery.img'); \
    codename = p.get_first('ro.product.device', 'ro.product.system.device', \
    'ro.product.vendor.device', 'ro.product.board'); \
    print(codename or ''); \
except: \
    print('')")
        set -e  # 重新启用错误退出
        echo "codename=$CODENAME" >> $GITHUB_OUTPUT
        echo "Extracted codename: $CODENAME"
        
    - name: Generate device tree
      run: |
        mkdir -p device_tree_output
        
        # 优先使用手动输入的设备代号
        if [ -n "${{ inputs.device_codename }}" ]; then
          DEVICE="${{ inputs.device_codename }}"
        else
          DEVICE="${{ steps.extract_codename.outputs.codename }}"
        fi
        
        if [ -n "$DEVICE" ]; then
          echo "Using device codename: $DEVICE"
          python3 -m twrpdtgen --device "$DEVICE" -o device_tree_output recovery.img
        else
          echo "No device codename provided, using auto-detection"
          python3 -m twrpdtgen -o device_tree_output recovery.img
        fi
        
    - name: Compress device tree
      run: |
        cd device_tree_output
        zip -r ../DeviceTree_${{ github.run_number }}.zip .
        cd ..
        
    - name: Create release with device tree
      uses: softprops/action-gh-release@v1
      with:
        files: DeviceTree_${{ github.run_number }}.zip
        name: TWRP_Device_Tree_${{ github.run_number }}
        tag_name: dt-${{ github.run_number }}
        body: |
          Automatically generated TWRP device tree
          Build run: ${{ github.run_number }}
          Source image: ${{ inputs.img_url }}
          Device codename: ${{ inputs.device_codename || steps.extract_codename.outputs.codename || 'Auto-detection failed' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
