name: Generate TWRP Device Tree

on:
  workflow_dispatch:
    inputs:
      LIBRARY_NAME:
        description: 'Library name for the device tree'
        required: true
        default: 'Twrp_Device_Generator'
      IMG_URL:
        description: 'URL to recovery/boot image'
        required: true
        default: 'https://github.com/momo54181/action_build_twrp_device_tree/raw/main/recovery.img'
      DEVICE_CODENAME:
        description: 'Device codename (if auto-detection fails)'
        required: false
        默认: ''

jobs:
  generate-device-tree:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3 \
          python3-pip \
          cpio \
          wget \
          zip \
          unzip \
          android-sdk-libsparse-utils
        
    - name: Install required Python packages
      run: |
        pip3 install --upgrade twrpdtgen
        pip3 install android-prop  # 用于属性提取的库
        
    - name: Download recovery image
      run: |
        wget -O recovery.img "${{ github.event.inputs.IMG_URL }}"
        file recovery.img || true
        
    - name: Convert sparse image if needed
      run: |
        if file recovery.img | grep -q "Android sparse image"; then
          simg2img recovery.img recovery_raw.img
          mv recovery_raw.img recovery.img
          echo "Converted sparse image to raw format"
        fi
        
    - name: Extract device codename
      id: extract_codename
      run: |
        # 使用android-prop库提取设备代号
        CODENAME=$(python3 -c "from android_prop import Prop; \
                  p = Prop.from_file('recovery.img'); \
                  print(p.get_first('ro.product.device', 'ro.product.system.device', \
                  'ro.product.vendor.device', 'ro.product.board'))" || true)
        
        # 如果没有提取到代号，使用默认值
        if [ -z "$CODENAME" ]; then
          CODENAME="unknown_device"
        fi
        
        echo "Extracted codename: $CODENAME"
        echo "codename=$CODENAME" >> $GITHUB_OUTPUT
        
    - name: Generate device tree
      run: |
        mkdir -p device_tree_output
        
        # 优先使用用户输入的设备代号，其次使用自动提取的
        if [ -n "${{ github.event.inputs.DEVICE_CODENAME }}" ]; then
          DEVICE="${{ github.event.inputs.DEVICE_CODENAME }}"
          echo "Using user-provided codename: $DEVICE"
        else
          DEVICE="${{ steps.extract_codename.outputs.codename }}"
          echo "Using auto-detected codename: $DEVICE"
        fi
        
        # 修正的命令格式：设备代号作为位置参数，而不是--device选项
        python3 -m twrpdtgen -o device_tree_output --debug "$DEVICE" recovery.img
        
    - name: Compress device tree
      run: |
        cd device_tree_output
        zip -r ../DeviceTree_${{ github.run_number }}.zip .
        cd ..
        
    - name: Create release with device tree
      uses: softprops/action-gh-release@v1
      with:
        files: DeviceTree_${{ github.run_number }}.zip
        name: TWRP_Device_Tree_${{ github.run_number }}
        tag_name: dt-${{ github.run_number }}
        body: |
          Automatically generated TWRP device tree
          Build run: ${{ github.run_number }}
          Source image: ${{ github.event.inputs.IMG_URL }}
          Device codename: ${{ github.event.inputs.DEVICE_CODENAME || steps.extract_codename.outputs.codename || 'Auto-detection failed' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
